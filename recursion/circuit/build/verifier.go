// This file is auto-generated by sp1-recursion-compiler.
package verifier

import (
	"github.com/consensys/gnark/frontend"
	"github.com/succinctlabs/sp1-recursion-gnark/babybear"
	"github.com/succinctlabs/sp1-recursion-gnark/poseidon2"
)

type Circuit struct {
	X frontend.Variable
	Y frontend.Variable
}

func (circuit *Circuit) Define(api frontend.API) error {
	var state [3]frontend.Variable
	p2 := poseidon2.NewPoseidon2Chip(api)
	babybear := babybear.NewChip(api)

	// Variables.
	var var3 frontend.Variable

	// Operations.
	var3 = frontend.Variable("1")
	state = [3]frontend.Variable{var3, var3, var3}
	p2.PermuteMut(&state)
	var3 = state[0]
	var3 = state[1]
	var3 = state[2]
	z := babybear.SplitIntoBabyBear(var3)
	api.Println(z[0].Value.Limbs[0])
	api.Println(z[1].Value.Limbs[0])
	api.Println(z[2].Value.Limbs[0])
	return nil
}
